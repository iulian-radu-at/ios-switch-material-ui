{"version":3,"file":"main.38d04cb2f1486773acd5.bundle.js","sources":["webpack:///./src/IosSwitchMaterialUi.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst defaultColorSwitch: string = '#e2e2e2';\nconst defaultColorKnobOnLeft: string = '#eeeeee';\nconst defaultColorKnobOnRight: string = '#5269d8';\n\nconst defaultAspectRatio: number = 2;\nconst defaultKnobSize: number = 18;\nconst paddingKnob: number = 2;\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  knob: {\n    borderRadius: '50%',\n    position: 'relative',\n    transition:\n      'background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, left 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  },\n  switch: {\n    display: 'inline-block',\n    transition:\n      'background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }\n};\n\nclass IosSwitchMaterialUi extends React.Component<IosSwitchMaterialUiProps, IosSwitchMaterialUiState> {\n  constructor(props: IosSwitchMaterialUiProps) {\n    super(props);\n\n    this.state = {\n      knobOnLeft: props.knobOnLeft || props.defaultKnobOnLeft || false\n    };\n  }\n\n  public render() {\n    return (\n      <div onClick={this.handleChange} style={this.getStyleForSwitch()}>\n        <div style={this.getStyleForKnob()} />\n      </div>\n    );\n  }\n\n  private getStyleForSwitch(): React.CSSProperties {\n    const { disabled } = this.props;\n\n    const backgroundColor: string = this.getSwitchColor();\n    const knobSize = this.getKnobSize();\n    const switchWidth = this.getSwitchWidth();\n    const switchHeight: number = this.getSwitchHeight();\n\n    const css: React.CSSProperties = {\n      ...styles.switch,\n      backgroundColor,\n      borderRadius: knobSize,\n      cursor: disabled ? undefined : 'pointer',\n      height: switchHeight,\n      minHeight: switchHeight,\n      minWidth: switchWidth,\n      opacity: disabled ? 0.4 : 1,\n      top: paddingKnob,\n      width: switchWidth\n    };\n\n    return css;\n  }\n\n  private getSwitchColor() {\n    const { colorSwitch } = this.props;\n\n    return isEmpty(colorSwitch) ? defaultColorSwitch : (colorSwitch as string);\n  }\n\n  private getSwitchWidth() {\n    return this.getAspectRatio() * this.getSwitchHeight();\n  }\n\n  private getAspectRatio() {\n    const { aspectRatio } = this.props;\n\n    return aspectRatio ? aspectRatio : defaultAspectRatio;\n  }\n\n  private getSwitchHeight() {\n    return this.getKnobSize() + 2 * paddingKnob;\n  }\n\n  private getKnobSize() {\n    const { knobSize } = this.props;\n\n    return knobSize ? knobSize : defaultKnobSize;\n  }\n\n  private getStyleForKnob(): React.CSSProperties {\n    const { knobOnLeft } = this.state;\n\n    const backgroundColor: string = this.getKnobColor(knobOnLeft);\n    const knobSize = this.getKnobSize();\n    const switchWidth = this.getSwitchWidth();\n\n    return {\n      ...styles.knob,\n      backgroundColor,\n      height: knobSize,\n      left: knobOnLeft ? paddingKnob : switchWidth - knobSize - paddingKnob,\n      top: paddingKnob,\n      width: knobSize\n    };\n  }\n\n  private getKnobColor(knobOnLeft: boolean) {\n    const { colorKnobOnLeft, colorKnobOnRight } = this.props;\n\n    if (knobOnLeft && isEmpty(colorKnobOnLeft) === false) {\n      return colorKnobOnLeft as string;\n    }\n\n    if (knobOnLeft !== true && isEmpty(colorKnobOnRight) === false) {\n      return colorKnobOnRight as string;\n    }\n\n    return knobOnLeft ? defaultColorKnobOnLeft : defaultColorKnobOnRight;\n  }\n\n  private handleChange = () => {\n    const { disabled, onChange } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    const newKnobOnLeft: boolean = !this.state.knobOnLeft;\n\n    if (this.props.knobOnLeft === undefined) {\n      this.setState({\n        knobOnLeft: newKnobOnLeft\n      });\n    }\n\n    onChange && onChange(newKnobOnLeft);\n  };\n}\n\nconst isEmpty = (str?: string): boolean => (str !== undefined && str.length > 0) === false;\n\ninterface IosSwitchMaterialUiState {\n  knobOnLeft: boolean;\n}\n\ninterface IosSwitchMaterialUiProps {\n  aspectRatio?: number;\n  colorKnobOnLeft?: string;\n  colorKnobOnRight?: string;\n  colorSwitch?: string;\n  defaultKnobOnLeft?: boolean;\n  disabled?: boolean;\n  knobOnLeft?: boolean;\n  knobSize?: number;\n  onChange?: (knobOnLeft: boolean) => void;\n}\n\nexport default IosSwitchMaterialUi;\n"],"mappings":"AAUA","sourceRoot":""}